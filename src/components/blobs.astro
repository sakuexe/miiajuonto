---
interface Props {
  type: string;
  colorClass?: string;
}
const { type, colorClass } = Astro.props;
---

{
  type === "header" ? (
    <svg
      viewBox="0 0 200 200"
      xmlns="http://www.w3.org/2000/svg"
      class={`${colorClass || "fill-secondary"} -rotate-45`}
    >
      <path
        d="M35.4,-47.4C50.1,-38.1,69.1,-33.4,78.5,-21.5C87.9,-9.6,87.8,9.4,81.6,25.9C75.5,42.4,63.3,56.4,48.7,64.7C34.1,72.9,17.1,75.5,2.5,72C-12,68.5,-24,59,-33.1,48.9C-42.2,38.9,-48.4,28.3,-57.6,15.2C-66.8,2,-78.9,-13.8,-78.7,-29C-78.5,-44.2,-66,-58.9,-50.8,-68C-35.6,-77.1,-17.8,-80.6,-3.7,-75.5C10.4,-70.4,20.7,-56.6,35.4,-47.4Z"
        transform="translate(100 100)"
      />
    </svg>
  ) : (
    <svg
      viewBox="0 0 200 200"
      xmlns="http://www.w3.org/2000/svg"
      class={`${colorClass || "fill-secondary"} rotate-[150deg]`}
    >
      <path
        d="M44,-38.7C56.8,-31.2,66.8,-15.6,70.5,3.6C74.1,22.9,71.3,45.7,58.5,56.6C45.7,67.4,22.9,66.3,6.6,59.7C-9.7,53.1,-19.3,41,-34,30.2C-48.7,19.3,-68.5,9.7,-72.8,-4.3C-77.2,-18.3,-66.1,-36.7,-51.4,-44.1C-36.7,-51.6,-18.3,-48.2,-1.4,-46.8C15.6,-45.4,31.2,-46.1,44,-38.7Z"
        transform="translate(100 100)"
      />
    </svg>
  )
}
