---
import experiences from "../data/experiences.json";
type Experience = {
  title: string;
  date?: string;
  image?: string;
  alt?: string;
  host?: string;
  link?: string;
};
---

<section id="kokemuksia" class="container space-y-5 mt-10">
  <div class="sectionheader">
    <h2>Kokemuksia</h2>
    <p>Sieltä sun täältä</p>
  </div>
  <div class="relative grid grid-cols-fluid gap-5 overflow-hidden max-h-96">
    {
      experiences.map((experience: Experience) => (
        <a
          href={experience.link}
          target="_blank"
          class="relative rounded-lg overflow-hidden aspect-square drop-shadow-2xl"
        >
          {experience.image ? (
            <img
              src={`./images/experiences/${experience.image}`}
              alt={experience.alt}
              loading="lazy"
              class="grayscale w-full h-full object-cover object-center"
            />
          ) : (
            <div class="w-full h-full flex justify-center items-center">
              <img
                src="./icons/microphone.webp"
                alt="mikrofoni-ikoni"
                width="100"
                height="100"
                class="opacity-50"
              />
            </div>
          )}
          <div class="absolute bottom-0 w-full text-center py-2 px-4 z-10">
            <h4 class="text-xl font-bold leading-[1.1] shadow-black text-shadow-sm">
              {experience.title}
            </h4>
            {experience.host && <p>{experience.host}</p>}
            {experience.date && <p>{experience.date}</p>}
          </div>
          {experience.link && (
            <img
              src="./icons/external-link.svg"
              alt="Ikoni ulkoiselle linkille"
              class="absolute top-0 right-0 m-2 w-6 h-6 drop-shadow-md"
            />
          )}
          <div class="w-full h-full bg-secondary absolute inset-0 m-auto mix-blend-color opacity-25" />
          <div class="w-full h-full bg-gradient-to-t from-primary to-transparent absolute bottom-0 left-0" />
        </a>
      ))
    }
    <button
      id="show-all"
      class="absolute -bottom-0 z-10 w-full py-5 hover:underline"
      >Näytä kaikki</button
    >
    <div
      id="feather-gradient"
      class="absolute bottom-0 left-0 w-full h-2/3 bg-gradient-to-t from-primary to-transparent"
    >
    </div>
  </div>
</section>

<script>
  const experiencesGrid = document.querySelector(
    "div.relative.grid"
  ) as HTMLDivElement;
  const featherGradient = document.querySelector(
    "div#feather-gradient"
  ) as HTMLDivElement;
  const showAllButton = document.querySelector(
    "button#show-all"
  ) as HTMLButtonElement;

  function checkGridHeight() {
    if (experiencesGrid?.offsetHeight < experiencesGrid?.scrollHeight) {
      showAllButton?.classList.remove("hidden");
      featherGradient?.classList.remove("hidden");
      return;
    }
    showAllButton?.classList.add("hidden");
    featherGradient?.classList.add("hidden");
  }

  window.onresize = checkGridHeight;

  // functionality for show all button
  showAllButton?.addEventListener("click", () => {
    showAllButton.classList.add("hidden");
    experiencesGrid?.classList.remove("max-h-96");
    featherGradient?.classList.add("hidden");
  });

  // check if grid is overflowing on load
  window.onload = checkGridHeight;
</script>
